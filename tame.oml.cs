//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace OmlExport {
    using System;
    using System.Collections.Generic;
    using Microsoft.SolverFoundation.Services;
    
    
    public class DefaultModel {
        
        private Model model;
        
        private SolverContext context;
        
        private Decision c1;
        
        private Decision c2;
        
        public DefaultModel() {
            this.context = SolverContext.GetContext();
            this.model = this.context.CreateModel();
            this.model.Name = "DefaultModel";
            // Create a Decision for C1
            this.c1 = new Decision(Domain.RealNonnegative, "C1");
            this.model.AddDecision(this.c1);
            // Create a Decision for C2
            this.c2 = new Decision(Domain.RealNonnegative, "C2");
            this.model.AddDecision(this.c2);
            // Add Constraint for R1
            this.model.AddConstraint("R1", ((this.c1 + this.c2) 
                            == 1D));
            // Add Goal for OBJxFUNC
            this.model.AddGoal("OBJxFUNC", GoalKind.Minimize, Model.Sum((this.c1 * this.c1), Model.Negate(Model.Product(2D, this.c1, this.c2)), (this.c2 * this.c2)));
        }
        
        public virtual Model Model {
            get {
                return this.model;
            }
        }
        
        public virtual SolverContext Context {
            get {
                return this.context;
            }
        }
        
        public virtual Decision C1 {
            get {
                return this.c1;
            }
        }
        
        public virtual Decision C2 {
            get {
                return this.c2;
            }
        }
        
        public virtual void Solve() {
            this.context.Solve();
        }
    }
}
